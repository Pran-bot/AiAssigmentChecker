name: Linux_MultiContainer_Workflow

on:
  push:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      # Checkout repo
      - name: Checkout repository
        uses: actions/checkout@v4

      # Azure login
      - name: Sign in via Azure CLI
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Docker login to ACR using secrets
      - name: Azure Container Registry login
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      # Build & push each service
      - name: Build and push containers
        run: |
          docker build ./backend/api -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/api:${{ github.sha }}
          docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/api:${{ github.sha }}



      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}


      # Deploy with safe startup command
      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ secrets.AZURE_WEBAPP_NAME }}
          images: |
            ${{ secrets.REGISTRY_LOGIN_SERVER }}/api:${{ github.sha }}
          startup-command: >
            docker network rm appnet || true &&
            docker network create appnet &&
            docker rm -f api || true &&
            docker rm -f worker1 || true &&
            docker rm -f worker2 || true &&
            docker run -d --name api --network appnet -p 3000:3000 ${{ secrets.REGISTRY_LOGIN_SERVER }}/api:${{ github.sha }} &&
            docker run -d --name worker1 --network appnet ${{ secrets.REGISTRY_LOGIN_SERVER }}/api:${{ github.sha }} npm run workerdev &&
            docker run -d --name worker2 --network appnet ${{ secrets.REGISTRY_LOGIN_SERVER }}/api:${{ github.sha }} npm run workerdev &&

      # Logout
      - name: Azure logout
        run: az logout
