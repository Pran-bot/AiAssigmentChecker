name: Build and Deploy Multi-Container App

on:
  push:
    branches:
      - main

env:
  REGISTRY_LOGIN_SERVER: ${{ secrets.REGISTRY_LOGIN_SERVER }}
  REGISTRY_USERNAME: ${{ secrets.REGISTRY_USERNAME }}
  REGISTRY_PASSWORD: ${{ secrets.REGISTRY_PASSWORD }}
  AZURE_WEBAPP_NAME: ${{ secrets.AZURE_WEBAPP_NAME }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Azure Container Registry
        run: |
          echo "${{ secrets.REGISTRY_PASSWORD }}" | docker login ${{ secrets.REGISTRY_LOGIN_SERVER }} \
          --username ${{ secrets.REGISTRY_USERNAME }} --password-stdin

      - name: Build and Push Images
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          REDIS_HOST: ${{ secrets.REDIS_HOST }}
          REDIS_PORT: ${{ secrets.REDIS_PORT }}
          NODE_ENV: ${{ secrets.NODE_ENV }}
          QUEUE_NAME: ${{ secrets.QUEUE_NAME }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          SESSION_SECRET: ${{ secrets.SESSION_SECRET }}
          UPLOAD_DIR: ${{ secrets.UPLOAD_DIR }}
          LOG_LEVEL: ${{ secrets.LOG_LEVEL }}
          GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          AZURE_STORAGE_CONNECTION_STRING: ${{ secrets.AZURE_STORAGE_CONNECTION_STRING }}
        run: |
          docker compose -f ./backend/docker-compose.prod.yml build
          docker compose -f ./backend/docker-compose.prod.yml push

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          app-name: ${{ secrets.AZURE_WEBAPP_NAME }}
          startup-command: >
            docker network rm appnet || true &&
            docker network create appnet &&
            docker rm -f redis || true &&
            docker rm -f api || true &&
            docker rm -f worker1 || true &&
            docker rm -f worker2 || true &&
            docker rm -f nginx || true &&

          configuration-file: ./backend/docker-compose.prod.yml
